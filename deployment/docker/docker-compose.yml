version: "3"
services:
  db:
    restart: always
    image: timescale/timescaledb-postgis:latest-pg11
    networks:
      - ogn
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ogn
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    restart: always
    image: redis
    networks:
      - ogn

  ogn-pg-importer:
    image: ogn-pg-importer
    networks:
      - ogn
    depends_on:
      - db
      - backend
    volumes:
      - ./data:/data
    environment:
      PGHOST: db
      PGDATABASE: ogn
      PGPASSWORD: postgres
      PGUSER: postgres
      BACKENDHOST: backend
      BACKENDPORT: 80

  backend:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
    ports:
      - "0.0.0.0:8080:80"
    volumes:
      - ./cups:/cups
    command: "gunicorn --bind :80 ogn_python:app"
    environment:
      PGHOST: db
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      REDIS_HOST: "redis"
      REDIS_URL: "redis://redis:6379/0"
      MODULE_NAME: "app"

  gateway:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
      - backend
    command: "./wait.sh flask gateway run"
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      REDIS_URL: "redis://redis:6379/0"
      BACKENDHOST: backend
      BACKENDPORT: 80

  worker:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
      - backend
    command: "./wait.sh celery -A celery_app worker -l info"
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      REDIS_URL: "redis://redis:6379/0"
      BACKENDHOST: backend
      BACKENDPORT: 80

  beat:
    restart: always
    image: ogn:latest
    networks:
      - ogn
    depends_on:
      - db
      - redis
      - backend
    command: "./wait.sh celery -A celery_app beat -l info"
    environment:
      SQLALCHEMY_DATABASE_URI: "postgresql://postgres:postgres@db:5432/ogn"
      REDIS_URL: "redis://redis:6379/0"
      BACKENDHOST: backend
      BACKENDPORT: 80

  flower:
    restart: always
    image: mher/flower
    networks:
      - ogn
    depends_on:
      - redis
    ports:
      - "127.0.0.1:5555:5555"
    command: "celery --broker=redis://redis:6379/0 flower --port=5555 -l info"

networks:
  ogn:
    driver: bridge
